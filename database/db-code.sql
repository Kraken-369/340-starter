-- Type: account_type

create type public.account_type as enum
  ('Client', 'Employee', 'Admin');

alter type public.account_type
  owner to major;


  -- Table sctructure for table `classification`
create table public.classification (
  classification_id int generated by default as identity,
  classification_name character varying not null,
  constraint classification_pk primary key (classification_id)
);

  -- Table structure for table `inventory`
create table if not exists public.inventory (
  inv_id integer not null generated by default as identity,
  inv_make character varying not null,
  inv_model character varying not null,
  inv_year character(4) not null,
  inv_description text not null,
  inv_image character varying not null,
  inv_thumbnail character varying not null,
  inv_price numeric(9, 0) not null,
  inv_miles integer not null,
  inv_color character varying not null,
  classification_id integer not null,
  constraint inventory_pkey primary key (inv_id)
);

  -- Create relationship between `classification` and `inventory` tables
alter table if exist public.inventory
  add constraint fk_classification foreign key (classification_id)
  references public.classification (classification_id) match simple
  on update cascade
  on delete no action;

  -- Table structure for table `account`
CREATE TABLE IF NOT EXISTS public.account
(
    account_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    account_firstname character varying NOT NULL,
    account_lastname character varying NOT NULL,
    account_email character varying NOT NULL,
    account_password character varying NOT NULL,
    account_type account_type NOT NULL DEFAULT 'Client'::account_type,
    CONSTRAINT account_pkey PRIMARY KEY (account_id)
);